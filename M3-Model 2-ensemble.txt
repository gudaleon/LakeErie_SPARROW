#SPARROW Model Final Code
#AGAO (Synth) datasets Model-2
#SPARROW Modeling Team
#up.ind has 0 values only /no upstream values/. 
#code runs
#corrected up.ind doesn't compile and doesn't run in OpenBUGS.
#model is compiled and running ok for all 95 stations
#L is for length, km
# new fert and manure - aggregated by i and distributed to i,j from NRC datraset 
#pasture is separated from calculations, i.e. manure and fert applied only to crop, agri and greens.

model{
	mm[999] <- 0	

for (i in 1:95){
ZHGvg_i[i]<-mean(ZHG[i,1:J[i]])

}
ZHG_avg<-mean(ZHGvg_i[])

ZHG_avg_plot<-ZHG_avg*coef

#stations 1to95.
for (i in 1:I){
for (j in 1:J[i]){
              deliver[i,j] <- exp(-alpha1*(ZHG[i,j]-ZHG_avg))#HG
	
             source1[1,i,j]<-(lu_crop[i,j]+lu_otheragri[i,j])*deliver[i,j]  #cropland
             source1[2,i,j]<-(lu_forest[i,j]+lu_wetland[i,j])*deliver[i,j]    #forest 
             source1[3,i,j]<-(lu_pasture[i,j])*deliver[i,j] #pasture
             source1[4,i,j]<-(lu_urban[i,j])*deliver[i,j]  #urban
             source1[5,i,j]<-lu_greenhouse[i,j] #greenhouse

            L_cl[1,i,j]<-L[i,j] #*class1[i,j]+L[i,j]*class2[i,j]+L[i,j]*class3[i,j]#Depth

#   	   decay[i,j] <- exp(-inprod(ks[], L_cl[,i,j]) - kr * ql[i,j])
   		 decay[i,j] <- exp(-ks[1]*L_cl[1,i,j] - kr * ql[i,j])
			 new_plot[i,j] <- inprod(beta[], source1[,i,j]) #non-point  #add this line in all ensemble members
			 
			new_plot40pct[i,j]<- 0.6*beta[1]*source1[1,i,j]+ beta[2]*source1[2,i,j]+ beta[3]*source1[3,i,j]+ 0.6*beta[4]*source1[4,i,j]+ 0.6*beta[5]*source1[5,i,j]

   	      new[i,j] <- beta.point*point[i,j] + inprod(beta[], source1[,i,j]) #predicted loading from i,j [865,348]
			 BS[i,j] <- (mm[up.ind[i,j]] + new[i,j])*decay[i,j]	
	
					}
	    mm[i]<-sum(BS[i,1:J[i]]) #predicted loading by SPARROW from watershed i
	    mu[i] <- log(mm[i])
			
	}		



#stations 96to865.
for (i in 96:865){
for (j in 1:J[i]){
              deliver[i,j] <- exp(-alpha1*(ZHG[i,j]-ZHG_avg))#HG

             source1[1,i,j]<-(lu_crop[i,j]+lu_otheragri[i,j])*deliver[i,j]  #cropland
             source1[2,i,j]<-(lu_forest[i,j]+lu_wetland[i,j])*deliver[i,j]    #forest 
             source1[3,i,j]<-(lu_pasture[i,j])*deliver[i,j] #pasture
             source1[4,i,j]<-(lu_urban[i,j])*deliver[i,j]  #urban
             source1[5,i,j]<-lu_greenhouse[i,j] #greenhouse

            L_cl[1,i,j]<-L[i,j] #*class1[i,j]+L[i,j]*class2[i,j]+L[i,j]*class3[i,j]#Depth
	   	  decay[i,j] <- exp(-ks[1]*L_cl[1,i,j] - kr * ql[i,j])
			 new_plot[i,j] <- inprod(beta[], source1[,i,j]) #non-point  #add this line in all ensemble members
		
			new_plot40pct[i,j]<- 0.6*beta[1]*source1[1,i,j]+ beta[2]*source1[2,i,j]+ beta[3]*source1[3,i,j]+ 0.6*beta[4]*source1[4,i,j]+ 0.6*beta[5]*source1[5,i,j]


   		 #decay[i,j] <- exp(-inprod(ks[], L_cl[,i,j]) - kr * ql[i,j])

   	      new[i,j] <- beta.point*point[i,j] + inprod(beta[], source1[,i,j]) #predicted loading from i,j [865,348]
			 BS[i,j] <- (mm[up.ind[i,j]] + new[i,j])*decay[i,j]	

					}
	#predicted loading by SPARROW from watershed i
	    mm[i]<-sum(BS[i,1:J[i]]) +0.001 #tonP/km2-greenhouse
	
	    mu[i] <- log(mm[i]+0.001)
	    
	
	    ms.sd[i]<-exp((1.1349* (mu[i] -0.001)- 0.8844))
  	  mstau2[i]<-1/(ms.sd[i]*ms.sd[i])
	
	}	

		
#priors 50%
#PRIORS
	alpha1~dnorm(1, 2.06E-09)
	betatrans[1] ~ dnorm(-3.540,0.48) #cropland 
	log(beta[1])<-betatrans[1]		
	betatrans[2] ~ dnorm(-5.224,0.46) #forest 
	log(beta[2])<-betatrans[2]				
	betatrans[3] ~ dnorm(-2.342,0.17) #pasture
	log(beta[3])<-betatrans[3]  
	betatrans[4] ~ dnorm(-2.808,0.37) #Urban 
	log(beta[4])<-betatrans[4]
	
	betatrans[5] ~ dnorm(-1.835,0.14) #Greenhouse
	log(beta[5])<-betatrans[5]
	

	krtrans ~ dnorm(2.5,7.77) #LCM
	log(kr)<-krtrans

    ks1trans~dnorm(-4.693,0.33) #-4.693,0.33 #log-values
	log(ks[1])<-ks1trans #ks1 in raw scale
	
	beta.point <-1
    coef~dnorm(1,100000)
	
##############################
# Master Formulation and Likelihood
##############################
	for (i in 1:I){
          dLoad[i] ~ dlnorm(mu[i],tau)	
         PreddLoad[i] ~ dlnorm(mu[i],tau)	#dLoad3
        PredlogLoad[i] ~ dnorm(dLoad[i], mstau[i]) #dLoad4
	         Load[i] ~ dnorm(dLoad[i], mstau[i])           
	         Load[i]<-exp(logLoad[i])
	
             dLoad2[i]<-exp(mu[i])
 			dLoad3[i]<-PreddLoad[i] 
	      dLoad4[i]<-PredlogLoad[i]
			Residual[i]<-Load[i] - mu[i]
			                	}

						
for (i in 96:865){
	          dLoad2[i]<-exp(mu[i])
	          dLoad3[i] ~ dlnorm(mu[i],tau)
	          dLoad4[i] ~ dnorm(dLoad3[i], mstau2[i])  
}


	tau ~ dgamma(0.01, 0.01)
	sigma<-sqrt(1/tau)		

                          		          }
}


#LE 1st attemp with 8 reservoirs 
#I=95 (total number of monitored watersheds)
####################################
#	Inference Data
list(I =95, 

logLoad=c(1.6529,2.3253,2.6711,2.9336,2.9366,2.5177,0.9925,3.1684,3.5647,1.6044,1.142,3.8528,4.5746,0.5908,0.957,0.6267,1.938,2.8408,3.1616,4.9093,2.9008,3.5613,3.708,3.9729,2.2624,5.4526,3.3594,2.1452,5.8963,3.1009,6.2831,2.6921,-2.0076,1.6032,1.2988,-1.956,2.7804,1.3625,1.376,4.0828,0.5645,1.9113,2.5634,3.3768,2.2673,2.4283,4.0952,3.8505,-0.4662,0.7619,0.3302,1.0862,0.9365,3.6033,1.763,2.9394,4.2402,3.2299,0.8874,2.8453,1.6172,1.9357,0.7205,1.5043,1.5435,1.8147,0.5273,4.0984,4.5981,-0.3376,0.8063,2.2734,2.0165,3.1337,3.7474,2.7097,5.8589,1.9202,6.1437,1.3244,1.142,5.8691,-0.0301,6.3207,3.7918,6.1,3.4988,1.4509,2.2622,3.6779,4.3071,4.5238,2.8119,3.8297,4.2704),


mstau=c(1.11655490995448,0.258984192372455,0.12117552291865,0.0651425820210668,0.0647439027117086,0.170372758476941,4.70257657971195,0.0375255468246549,0.0149257957177735,1.23955116726571,3.382449329647,0.00768234433504416,0.00148339390742408,10.1192372255101,5.07418214442087,9.45619911036222,0.600458418242188,0.0811489011052714,0.0381190660491413,0.000698036097318443,0.0703743291967644,0.0150516551427419,0.0107191154889364,0.00583156839280706,0.296116739838221,0.000207017698881029,0.024031131684797,0.38225199214716,7.74490313410339E-05,0.0439170078702878,3.30511515286535E-05,0.115315411757872,1196.91991986886,1.23955116726571,2.41469487446904,1151.75880620176,0.0935639676818867,2.09003403542753,2.02901444313023,0.00453343767342188,10.5119097913698,0.637298220816536,0.154199169220796,0.0230881769518165,0.292817414719709,0.206796772797157,0.00404774714513577,0.00772293494611891,70.9830856089196,7.35279714976978,16.2908725518817,3.80340818275338,5.3186863860738,0.0136500150832707,0.878662487672296,0.0642946866074801,0.00316749925812902,0.0325050409645665,5.84607582909477,0.0802053536579646,1.20241317287729,0.603673718617259,7.95689164344973,1.54210433679063,1.41829254678359,0.784870102109122,11.3106102478181,0.00437789687781304,0.00140640594045046,57.2804217247906,6.80590634503592,0.289572925464018,0.504776185372563,0.0407224752960427,0.00979376980276371,0.110621781668871,8.41340048876852E-05,0.623519206826764,4.48950384857034E-05,2.26689213308566,3.382449329647,0.000110295984663693,31.5548661460933,0.000030437500608089,0.00884189963048229,0.000049435062490521,0.0173862911720745,1.72886437757842,0.296116739838221,0.0114850600757715,0.00271924667508824,0.00166448009287082,0.0867836423891015,0.00809687064234755,0.00295616027898661),

# number of reaches for each monitored ws:

J=c(167,140,63,93,101,159,53,57,129,31,25,147,110,93,33,115,57,33,81,103,145,125,179,99,207,69,195,81,147,189,125,91,7,71,79,9,236,49,43,262,29,33,77,85,79,35,37,37,9,19,21,3,3,10,33,67,9,115,19,131,67,53,45,73,41,41,27,173,39,23,31,157,71,81,150,91,348,65,237,26,63,219,29,45,101,98,125,63,37,223,211,179,101,181,85,1,1,1,1,11,1,1,1,1,1,1,1,2,1,1,1,1,2,2,1,2,1,1,1,2,1,1,2,1,3,25,1,1,1,1,1,5,7,3,5,9,7,1,1,1,1,1,1,1,1,37,1,81,1,3,1,1,3,3,5,59,1,3,1,11,1,31,1,35,3,3,1,9,5,1,1,1,1,1,5,11,1,5,5,1,3,1,1,3,1,3,13,1,1,5,1,1,7,11,1,5,1,5,1,3,1,49,3,1,19,83,5,1,3,1,1,1,1,3,33,3,1,3,1,1,9,1,3,3,1,212,1,1,1,1,1,7,1,1,1,33,83,5,6,1,1,1,7,3,3,1,1,1,1,1,3,11,25,80,1,1,1,1,1,1,1,1,11,1,3,1,1,1,7,1,3,15,1,1,13,7,1,1,1,3,5,1,3,1,1,1,1,1,1,1,1,53,3,1,1,15,5,3,3,5,1,1,1,7,1,1,36,3,1,3,1,5,111,7,1,51,1,7,9,3,5,15,27,1,1,3,58,7,1,1,5,35,32,1,7,1,1,1,3,7,9,5,1,1,1,13,1,7,1,1,1,1,1,41,1,19,1,3,1,3,1,9,3,1,1,1,11,11,1,21,3,1,1,3,1,24,1,1,1,1,1,9,1,1,7,17,3,3,1,5,19,3,45,1,1,1,1,1,1,3,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,13,3,1,1,25,34), 

